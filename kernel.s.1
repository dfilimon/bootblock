# Segmentul de date
.data

greet:
    .ascii  "Salut, bine ai venit in kernelul nostru"
    .byte   13, 10

.equ    greet_len, .-greet

# Segmentul de cod
.text
.globl  _start
.code16

_start:
    
    # Initializeaza registrul segment corespunzator
    movw    %ds, %ax
    movw    %ax, %es

    # Determina pozitia cursorului (in dx)
    movb    $0x03, %ah
    movw    $0x0007, %bx    # Pagina in bh, culoarea in bl
    int     $0x10

    # Afiseaza mesajul de salut
    pushw   %bp
    movw    $greet, %bp     # Sirul de caractere in bp
    movw    $greet_len, %cx # Lungimea sirului in cx
    #movw    $0x0007, %bx    # Caracteristici ale mesajului in bx
    movw    $0x1301, %ax    # Codul functiei in ah
    int     $0x10           # Codul intreruperii BIOS
    popw    %bp

# Ciclu infinit ca sa nu strice ceva
# aiurea prin memorie
infinit:
    hlt
    jmp infinit
